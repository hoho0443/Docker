daemon off;
user www-data;
worker_processes auto;
worker_rlimit_nofile 100000;

error_log  /usr/local/nginx/logs/error.log warn;
#pid        /var/run/nginx.pid;



include /usr/local/nginx/conf/conf.d/*.conf;

events {
    worker_connections  4096;
    use epoll;
    multi_accept on;
}

http {
    server_tokens off;
    
    include       mime.types;
    default_type  application/octet-stream;

    sendfile        on;
    tcp_nopush      on;
    tcp_nodelay on;

    keepalive_timeout 15;
    types_hash_max_size 2048;

    client_body_buffer_size 10K;
    client_header_buffer_size 1k;
    client_max_body_size 2m;
    large_client_header_buffers 2 1k;

    proxy_connect_timeout       10;
    proxy_send_timeout          10;
    proxy_read_timeout          10;
    send_timeout                10;

    server_names_hash_bucket_size 64;

    gzip              on;
    gzip_http_version 1.0;
    gzip_proxied      any;
    gzip_min_length   10240;
    gzip_disable      "MSIE [1-6]\.";
    gzip_types        text/plain text/xml text/css
                      text/comma-separated-values
                      text/javascript
                      application/x-javascript
                      application/atom+xml;

    include /usr/local/nginx/conf/sites/*;

    fastcgi_hide_header X-Powered-By;
    fastcgi_hide_header X-Pingback;
    fastcgi_hide_header Link;

    proxy_hide_header X-Powered-By;
    proxy_hide_header X-Pingback;
    proxy_hide_header X-Link;

    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for"';

    log_format json_format '{ "@time": "$time_iso8601", '
           '"@fields": { '
               '"country": "$http_cf_ipcountry", '
               '"ip": "$remote_addr", '
               '"status": "$status", '
               '"request": "$request", '
               '"size": "$body_bytes_sent", '
               '"user-agent": "$http_user_agent", '
               '"referrer": "$http_referer" } }';

    access_log  /usr/local/nginx/logs/access.log  main;

    open_file_cache max=1000 inactive=20s;
    open_file_cache_valid    30s;
    open_file_cache_min_uses 2;
    open_file_cache_errors   on;

    upstream app_servers {
        least_conn;
        server 127.0.0.1:9000 weight=10 max_fails=3 fail_timeout=30s;
        server 127.0.0.1:9000 weight=10 max_fails=3 fail_timeout=30s;
    }

    server {
        listen 80;
        server_tokens off;
        add_header "X-UA-Compatible" "IE=Edge,chrome=1";

        pagespeed on;
        pagespeed FileCachePath "/app/cache";
        pagespeed FileCacheSizeKb            102400;
        pagespeed FileCacheCleanIntervalMs   3600000;
        pagespeed FileCacheInodeLimit        500000;
        pagespeed LRUCacheKbPerProcess     8192;
        pagespeed LRUCacheByteLimit        16384;
        #pagespeed CriticalImagesBeaconEnabled false;

        location ~ "\.pagespeed\.([a-z]\.)?[a-z]{2}\.[^.]{10}\.[^.]+" {
          add_header "" "";
        }
        location ~ "^/pagespeed_static/" { }
        location ~ "^/ngx_pagespeed_beacon$" { }

        location ~ ^/(images/|img/|javascript/|js/|css/|stylesheets/|flash/|media/|static/|robots.txt|humans.txt|favicon.ico) {
            root /app/public;
            access_log off;
            expires max;
        }

        location / {
            proxy_pass http://app_servers;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_redirect     off;
            proxy_cache_bypass $http_upgrade;
            
            proxy_set_header   X-Real-IP $remote_addr;
            proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header   X-Forwarded-Host $server_name;
            proxy_set_header   X-NginX-Proxy    true;
        }

        access_log /usr/local/nginx/logs/access.json json_format;
        error_log /usr/local/nginx/logs/error.log warn;

        error_page 404 /404.html;
        error_page 500 502 503 504 /50x.html;
        location = /50x.html {
            root /usr/share/nginx/www;
        }
    }
}

stream {
    include /usr/local/nginx/conf/streams/*;
}